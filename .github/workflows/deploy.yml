name: Admin Frontend CI/CD

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env: # <-- inject environment variables here
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
      PORT: 3000 # optional, only if you need it at runtime

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      # Step 3: Install dependencies and build
      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      # Step 4: Prepare artifact (dist + public if Next.js)
      - name: Archive production files
        run: |
          mkdir deploy

          if [ -d ".next" ]; then
            echo "Next.js project detected ✅"
            cp -r .next deploy/
            cp -r public deploy/
          elif [ -d "dist" ]; then
            cp -r dist deploy/
          elif [ -d "build" ]; then
            cp -r build deploy/
          else
            echo "❌ No build folder found!"
            exit 1
          fi

          cp package*.json deploy/
          cd deploy && tar -czf ../deploy.tar.gz .

      # Step 5: Setup SSH
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}

      # Step 6: Upload and deploy
      - name: Deploy to server
        run: |
          scp -o StrictHostKeyChecking=no deploy.tar.gz ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:/tmp/deploy.tar.gz

          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            mkdir -p /var/www/admin.beatpasal.com
            cd /var/www/admin.beatpasal.com

            rm -rf .next dist build public
            tar -xzf /tmp/deploy.tar.gz -C /var/www/admin.beatpasal.com

            npm ci

            pm2 restart admin-beatpasal || pm2 start npm --name admin-beatpasal -- start
            sudo systemctl restart nginx
          EOF
